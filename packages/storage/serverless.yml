service: scrpr-storage

plugins:
  - serverless-stack-output
  - serverless-webpack

custom:
  output:
    file: ../cf-storage.yml
  webpack:
    packager: 'yarn'
    excludeFiles: __tests__/**
    includeModules:
      forceInclude:
        - knex # webpack fails to bundle knex
        - pg

provider:
  name: aws
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource: '*'

functions:
  CustomResourceCreator:
    name: CustomResourceCreator
    handler: functions/CustomResourceCreator/handler.handler
    runtime: nodejs12.x
    versionFunctions: false
    timeout: 300
    dependsOn: InitializeDatabaseLambdaFunction
    environment:
      CF_REGION: ${file(../cf-domain.yml):Region}
  InitializeDatabase:
    name: InitializeDatabase
    handler: functions/InitializeDatabase/handler.handler
    runtime: nodejs12.x
    versionFunctions: false
    timeout: 300
    vpc:
      securityGroupIds:
        - ${file(../cf-domain.yml):SecurityGroupDBId}
      subnetIds:
        - ${file(../cf-domain.yml):SubnetAId}
        - ${file(../cf-domain.yml):SubnetBId}
    environment:
      DB_USER: ${file(../secrets.yml):DB_USER}
      DB_PASSWORD: ${file(../secrets.yml):DB_PASSWORD}
      DB_HOST:
        Fn::GetAtt: ['Database', 'Endpoint.Address']

resources:
  Resources:
    Database: ${file(resources/aurora-postgresqldatabase.yml)}
    DBSubnetGroup: ${file(resources/database-subnet-group.yml)}
    RDSInitialize: ${file(resources/custom-rds-initialize.yml)}

  Outputs:
    DatabaseHost:
      Value:
        Fn::GetAtt: ['Database', 'Endpoint.Address']